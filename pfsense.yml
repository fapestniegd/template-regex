---
regex_tpl:
  ANYTHING: '.*'
  DATE: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
  SDATE: '[0-9]{4}/[0-9]{2}/[0-9]{2}'
  TIME: '[0-9]{2}:[0-9]{2}:[0-9]{2}'
  TZ_OFF: '[+\-][0-9]{2}:[0-9]{2}'
  MACADDR: '[0-9a-fA-F:]+'
  DIRECTION: in|out
  HEX: 0x\S+
  HOSTNAME: \S+
  IFACE: \S+
  RULE: \S+
#  IFACE_IP: '[^:]+:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
#  IFACE_IP_PORT: '[^:]+:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/[0-9]+'
#  IFACE_IP_PORT_P: '[^:]+:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/[0-9]+\s+\([^\)]*\)'
#  IFACE_IP_SVC: '[^:]+:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/\S+'
  INT: \d+
  ACTION: pass|block
  IP: '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
  IP_PORT: '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
  FLAGS: S|A|SA|R|F
#  TRANSPORT: TCP|UDP
#  TUNNEL_GROUP: \S+
#  TYPE_CODE: '\(type \d+, code \d+\)'
#  USER_P: \(\S+\)
  P_DATA: \([^()]*\([^()]*\)[^()]*\)
  QUERY: PTR|A|SRV|TXT|AAAA|SOA|MX|NXDomain|ServFail|CNAME
  OID: '[0-9\.]+'
  OID_LIST: '[0-9\.]+|[0-9\.]+ [0-9\.]+|[0-9\.]+ [0-9\.]+ [0-9\.]+|[0-9\.]+ [0-9\.]+ [0-9\.]+ [0-9\.]+|[0-9\.]+ [0-9\.]+ [0-9\.]+ [0-9\.]+ [0-9\.]+'
  OFFSET: '[+\-]*[0-9]+\.[0-9]+'
  STRING: '\S+'
  OFFSET_ROLE: Originator|Receive
  TIMESTAMP_ROLE: Transmit|Reference|Receive
  DHCP_FLAGS: none|Broadcast
  MSS_FLAGS: '<mss [0-9]+,[^>]+>'
  SYSLOG_FACILITY: auth|authpriv|cron|daemon|ftp|kern|local[0-7]|lpr|mail|news|syslog|user|uucp
  SYSLOG_SEVERITY: notice|debug|warn|warning|info|err|error|crit|critical|emerg|emergency|alert
  WINDOWS_MSG: .*
  USERNAME: \S+
# # these are all over the place... ,so we just grab between the <>'s until we come up with a better regex
# # <mss [% INT %],nop,nop,sackOK>
# # <mss [% INT %],nop,wscale [% INT %],nop,nop,sackOK>
# # <mss [% INT %],sackOK,timestamp [% INT %] [% INT %],nop,wscale [% INT %]>
# # <mss [% INT %],nop,wscale [% INT %],nop,nop,timestamp [% INT %] [% INT %],sackOK,eol>
# # <mss [% INT %],nop,wscale [% INT %],nop,nop,timestamp [% INT %] [% INT %],nop,nop,sackOK> # new
################################################################################
# Here we have nested log substrings and their names, the logic being that 
# you can match the first part of a line, and then iterate to match the 
# remainder of the line. What you should get out of the function is the 
# dot-delimited name of the path it took
# ( e.g. cisco_asa.ipsec_message.constr_blank_hash ) a list of patterns matched
# by each of the (expanded) templates
# since cisco_ass.local_host_teardown "expands" to:
# '[% DATE %]T[% TIME %][% TZ_OFF %] [% HOSTNAME %] [% ASA_CODE %] Teardown local-host [% IFACE_IP %] duration [% DURATION %]'
# There would be a list of 7 elements of the 7 patterns matched by [% TAGS %]
# if you need finer resolution into the tag, break it out into smaller tags
# ( e.g. [% IP %] can become [% INT %]\.[% INT %]\.[% INT %]\.[% INT %] )
#
# The reaoning behind this is that you can triggre a function on cisco_asa.local_host_buildup,
# and pass it the list of 6 patterns that matched as arguments 
################################################################################
log_tpl:
 - name: pfsense
   regex: '[% DATE %]T[% TIME %][% TZ_OFF %] [% HOSTNAME %] pf: '
   remainder: 
     - name: connection
       regex: '[0-9]*\.*\s*[% INT %] rule [% RULE %]: [% ACTION %] [% DIRECTION %] on [% IFACE %]: [% P_DATA %] [% IP_PORT %] > [% IP_PORT %]: '
       remainder:
         - name: tcp
           regex: '[% FLAGS %], cksum [% HEX %] .correct., [% INT %]:[% INT %].[% INT %]. win [% INT %]\s*'
           remainder:
             - name: mss_data
               regex: '[% MSS_FLAGS %]'
             - name: remainder
               regex: '[% ANYTHING %]'
         - name: tcp_ack
           regex: '[% FLAGS %], cksum [% HEX %] .correct., [% INT %]:[% INT %].[% INT %]. ack [% INT %] win [% INT %] '
           remainder:
             - name: mss_data
               regex: '[% MSS_FLAGS %]'
             - name: remainder
               regex: '[% ANYTHING %]'
         - name: tcp_ack
           regex: '[% INT %], .* IXFR? [% HOSTNAME %] .[% INT %].'
           remainder:
             - name: remainder
               regex: '[% ANYTHING %]'
        ########################################################################
         - name: dns
           regex: '[% INT %]\S* [% QUERY %]\S* [% HOSTNAME %]\.* .[% INT %].'
         - name: dns_flags
           regex: '[% INT %]\S* \[.*\] [% QUERY %]\S* [% HOSTNAME %]\.* .[% INT %].'
         - name: dns_update_flags
           regex: '[% INT %]\S* update \[.*\] [% QUERY %]\S* [% HOSTNAME %]\.* .[% INT %].'
         - name: dns_binary_slashes
           regex: '[% INT %]\S* [% INT %]/[% INT %]/[% INT %] [% QUERY %]\S* [% HOSTNAME %]\.*:*[0-9]*\s*[0-9]*\s*[0-9]*\s+.[% INT %].\s*'
         - name: dns_binary_slashes_host
           regex: '[% INT %]\S* [% INT %]/[% INT %]/[% INT %] [% HOSTNAME %] [% QUERY %]\S* [% HOSTNAME %]\.*:*[0-9]*\s*[0-9]*\s*[0-9]*\s+.[% INT %].\s*'
         - name: dns_notify_flags
           regex: '[% INT %]\S* notify \[.*\] [% QUERY %]\S* [% HOSTNAME %]\.* .[% INT %].'
        ########################################################################
         - name: tcp
           regex: '[% FLAGS %], cksum [% HEX %] .correct., [% INT %]:[% INT %].[% INT %]. win [% INT %] <mss [% INT %],nop,nop,sackOK>'
         - name: bootp_dhcp_reply
           regex: 'BOOTP/DHCP, Reply, length [% INT %], hops [% INT %], xid [% HEX %], Flags \[[% DHCP_FLAGS %]\]'
         - name: bootp_dhcp_request
           regex: 'BOOTP/DHCP, Request from [% MACADDR %], length [% INT %], xid [% HEX %], secs [% INT %], Flags \[[% DHCP_FLAGS %]\]'
         - name: radius
           regex: 'RADIUS, length: [% INT %]'
         - name: v5
           regex: 'v5'
         - name: ntpv3
           regex: 'NTPv3, length [% INT %]'
         - name: ntpv4
           regex: 'NTPv4, length [% INT %]'
         - name: tcp_stuff
           regex: '[% FLAGS %], cksum [% HEX %] .correct., [% INT %]:[% INT %].[% INT %]. win [% INT %] <mss [% INT %],nop,nop,sackOK>'
         - name: snmpv1
           regex: '{ SNMPv1 { GetRequest.[% INT %]. R=[% INT %]\s+[% OID_LIST %]'
         - name: snmpv1_getnext_nostring
           regex: '{ SNMPv1 { GetNextRequest.[% INT %]. R=[% INT %]\s+[% OID_LIST %] } } '
         - name: snmpv1_get
           regex: '{ SNMPv1 C=[% STRING %] { GetRequest.[% INT %]. R=[% INT %]\s+[% OID_LIST %]\s+} } '
         - name: snmpv1_getnext
           regex: '{ SNMPv1 C=[% STRING %] { GetNextRequest.[% INT %]. R=[% INT %]\s+[% OID_LIST %]\s+} } '
         - name: snmpv2_getnext
           regex: '{ SNMPv2c C=[% STRING %] { GetNextRequest.[% INT %]. R=[% INT %]\s+[% OID_LIST %]\s+} } '
         - name: udp
           regex: 'UDP, length [% INT %]'
         - name: syslog
           regex: 'SYSLOG, length: [% INT %]'
         - name: netbios_unicast
           regex: 'NBT UDP PACKET.[% INT %].: QUERY; REQUEST; UNiCAST'
         - name: netbios_bcast
           regex: 'NBT UDP PACKET.[% INT %].: QUERY; REQUEST; BROADCAST'
         - name: netbios_packet
           regex: 'NBT UDP PACKET.[% INT %].'
         - name: nbt_udp_unicast
           regex: 'NBT UDP PACKET.[% INT %].: REFRESH.[% INT %].; REQUEST; UNICAST'
         - name: nbt_udp_broadcast
           regex: 'NBT UDP PACKET.[% INT %].: REGISTRATION; REQUEST; BROADCAST'
         - name: remainder
           regex: '[% ANYTHING %]'
     - name: icmp
       regex: '[0-9]*\.*\s*[% INT %] rule [% RULE %]: [% ACTION %] [% DIRECTION %] on [% IFACE %]: [% P_DATA %] [% IP %] > [% IP %]: '
       remainder:
         - name: icmp
           regex: 'icmp'
         - name: echo_request
           regex: 'ICMP echo request, id [% INT %], seq [% INT %], length [% INT %]'
         - name: echo_reply
           regex: 'ICMP echo reply, id [% INT %], seq [% INT %], length [% INT %]'
         - name: igmp_query_v1
           regex: 'igmp query v1'
         - name: remainder
           regex: '[% ANYTHING %]'
     - name: numbered_connection
       regex: '[% INT %]\. [% INT %] rule [% RULE %]: [% ACTION %] [% DIRECTION %] on [% IFACE %]: [% P_DATA %] [% IP_PORT %] > [% IP_PORT %]: '
       remainder:
         - name: remainder
           regex: '[% ANYTHING %]'
     ###########################################################################
     # Good ol' bang zero 11 for a tab                                         #
     - name: tab
       regex: '#011\s*'
       remainder:
      ##########################################################################
         - name: windows_msg
           regex: 'Msg: [% WINDOWS_MSG %]'
         - name: facility_local
           regex: 'Facility [% SYSLOG_FACILITY %] .[% INT %]., Severity [% SYSLOG_SEVERITY %] .[% INT %].'
         - name: client_ethernet
           regex: 'Client-Ethernet-Address [% MACADDR %]'
         - name: client_ip
           regex: 'Client-IP [% IP %]'
         - name: client_leap_indicator
           regex: 'Client, Leap indicator:  .[% INT %]., Stratum [% INT %], poll [% INT %]s*'
         - name: client_leap_indicator_unsync
           regex: 'Client, Leap indicator: clock unsynchronized .[% INT %]., Stratum [% INT %]s, poll [% INT %]s*'
         - name: client_leap_indicator_prec
           regex: 'Client, Leap indicator:  .[% INT %]., Stratum [% INT %], poll [% INT %]s*, precision -*[% INT %]'
         - name: client_leap_indicator_unsync_prec
           regex: 'Client, Leap indicator: clock unsynchronized .[% INT %]., Stratum [% INT %], poll [% INT %]s*, precision -*[% INT %]'
         - name: tftp_pxelinux_0
           regex: 'file "pxelinux.0" \[|bootp\]'
         - name: tftp_thinstation
           regex: 'file "thinstation.nbi.zpxe" \[|bootp\]'
         - name: gateway_ip
           regex: 'Gateway-IP [% IP %]'
         - name: root_delay_unspec
           regex: 'Root Delay: [% INT %].[% INT %], Root dispersion: [% INT %].[% INT %], Reference-ID: .unspec.'
         - name: root_delay_ip
           regex: 'Root Delay: [% INT %].[% INT %], Root dispersion: [% INT %].[% INT %], Reference-ID: .[% IP %]'
         - name: server_ip
           regex: 'Server-IP [% IP %]'
         - name: your-ip
           regex: 'Your-IP [% IP %]'
         - name: access_request
           regex: 'Access Request .[% INT %]., id: [% HEX %], Authenticator: [% STRING %]'
         - name: acct_auth_attr
           regex: 'Accounting Authentication Attribute .[% INT %]., length: [% INT %], Value: RADIUS'
         - name: acct_delay_attr
           regex: 'Accounting Delay Attribute .[% INT %]., length: [% INT %], Value: [% INT %] secs'
         - name: acct_req
           regex: 'Accounting Request .[% INT %]., id: [% HEX %], Authenticator: [% STRING %]'
         - name: acc_sess_id
           regex: 'Accounting Session ID Attribute .[% INT %]., length: [% INT %], Value: .*'
         - name: acct_status_attr
           regex: 'Accounting Status Attribute .[% INT %]., length: [% INT %], Value: Start'
         - name: calling_station_attr
           regex: 'Calling Station Attribute .[% INT %]., length: [% INT %], Value: [% IP %]'
         - name: calling_station_attr_src
           regex: 'Calling Station Attribute .[% INT %]., length: [% INT %], Value: ip:source-ip=[% IP %]'
         - name: nas_ip_addr
           regex: 'NAS IP Address Attribute .[% INT %]., length: [% INT %], Value: [% IP %]'
         - name: nas_port_attr
           regex: 'NAS Port Attribute .[% INT %]., length: [% INT %], Value: [% INT %]'
         - name: nas_port_id_attr
           regex: 'NAS Port ID Attribute .[% INT %]., length: [% INT %], Value: [% STRING %]'
         - name: nas_port_type_attr
           regex: 'NAS Port Type Attribute .[% INT %]., length: [% INT %], Value: Virtual'
         - name: passwd_attr
           regex: 'Password Attribute .[% INT %]., length: [% INT %], Value: '
         - name: service_type_attr
           regex: 'Service Type Attribute .[% INT %]., length: [% INT %], Value: NAS Prompt'
         - name: username_attr
           regex: 'Username Attribute .[% INT %]., length: [% INT %], Value: [% USERNAME %]'
         - name: reply_attr
           regex: 'Reply Attribute .[% INT %]., length: [% INT %], Value: Password: '
         - name: vendor_attr
           regex: 'Vendor Attribute: [% INT %], Length: [% INT %], Value: ip:source-ip=[% IP %]'
         - name: vendor_specific_attr
           regex: 'Vendor Specific Attribute .[% INT %]., length: [% INT %], Value: Vendor: .* .[% INT %].'

      ##########################################################################
         - name: origninator
           regex: 'Originator - '
           remainder:
             - name: timestamp_offset
               regex: '[% TIMESTAMP_ROLE %] Timestamp:\s+'
               remainder:
                 - name: data
                   regex: '[% OFFSET %]'
                 - name: remainder
                   regex: '[% ANYTHING %]'
             - name: timestamp_data
               regex: '[% TIMESTAMP_ROLE %] Timestamp:\s+'
               remainder:
                 - name: data
                   regex: '[% INT %]\.[% INT %] .[% SDATE %] [% TIME %].'
                 - name: remainder
                   regex: '[% ANYTHING %]'
             - name: remainder
               regex: '[% ANYTHING %]'
      ##########################################################################
         - name: timestamp_data
           regex: '[% TIMESTAMP_ROLE %] Timestamp:\s+'
           remainder:
             - name: offset
               regex: '[% OFFSET %]'
             - name: data
               regex: '[% INT %]\.[% INT %] .[% SDATE %] [% TIME %].'
             - name: remainder
               regex: '[% ANYTHING %]'
      ##########################################################################
         - name: timestamp_offset
           regex: '[% OFFSET_ROLE %] Timestamp:\s+'
           remainder:
             - name: data
               regex: '[% OFFSET %]'
             - name: remainder
               regex: '[% ANYTHING %]'
         - name: remainder
           regex: '[% ANYTHING %]'
     #                                                                         #
     ###########################################################################
     - name: remainder
       regex: '[% ANYTHING %]'
 - name: remainder
   regex: '[% ANYTHING %]'
